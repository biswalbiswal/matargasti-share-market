Cursor Program - 1 =
To Accept the Location from the User & Print all Employees from Table
belonging to that Location.

WORKING-STORAGE SECTION.
01  WS-LOC   PIC X(03) VALUE SPACES.
    EXEC SQL
    DECLARE EMP_CUR CURSOR FOR
    SELECT EMP_ID, EMP_NAME, EMP_TECH, EMP_EARN, EMP_DEDN
    FROM T01_EMPLOYEE_TABLE
    WHERE    EMP_LOC = :WS-LOC
    END-EXEC
PROCEDURE DIVISION.
MAIN-PARA.
    ACCEPT WS-LOC
    EXEC SQL
    OPEN EMP_CUR
    END-EXEC
SQLCODE = 0 means Open Success

    EXEC SQL
    FETCH EMP_CUR INTO
    :EMP-ID, :EMP-NAME, :EMP-TECH, :EMP-EARN, :EMP-DEDN
    END-EXEC
SQLCODE = 0   means Row Successfully fetched
SQLCODE = 100 means No more Rows to Fetch

    EXEC SQL
    CLOSE EMP_CUR
    END-EXEC
SQLCODE = 0 means Close Success
===========================================================
Cursor Program - 2 =
To Accept Multiple Locations from the User & Print all Employees from Table belonging to those individual Location.





Create the following 2 Tables & Insert the Rows given below -
  DROP   TABLE T01_LOCATION_TABLE;                                         COMMIT;                                                
  CREATE TABLE T01_LOCATION_TABLE                        
   (LOC_ID        CHAR(3) NOT NULL PRIMARY KEY,
    LOC_NAME      VARCHAR(12))
    IN PATNIDB1.PATNITS1;                                
  CREATE UNIQUE INDEX LOCIDX ON T01_LOCATION_TABLE(LOC_ID);
--
  DROP   TABLE T01_EMPLOYEE_TABLE;
  COMMIT;
  CREATE TABLE T01_EMPLOYEE_TABLE                                            (EMP_ID        CHAR(5) NOT NULL PRIMARY KEY,             
    EMP_NAME      VARCHAR(15),                                 
    EMP_LOC       CHAR(3),                                  
    EMP_DOB       DATE,                                     
    EMP_TECH      CHAR(5),                                  
    EMP_EARN      DECIMAL(7,2),                             
    EMP_DEDN      DECIMAL(7,2),                             
    FOREIGN KEY(EMP_LOC) REFERENCES T01_LOCATION_TABLE(LOC_ID))
    IN PATNIDB1.PATNITS1;
  CREATE UNIQUE INDEX EMPIDX ON T01_EMPLOYEE_TABLE(EMP_ID);
===========================================================
  INSERT INTO T01_LOCATION_TABLE                                
   VALUES('CHN', 'CHENNAI');                                    
  INSERT INTO T01_LOCATION_TABLE                                
   VALUES('PUN', 'PUNE');                                       
  INSERT INTO T01_LOCATION_TABLE                                
   VALUES('MUM', 'MUMBAI');                                       
  INSERT INTO T01_LOCATION_TABLE                                
   VALUES('BGL', 'BENGALURU');                                       
--
  INSERT INTO T01_EMPLOYEE_TABLE
   VALUES('10001', 'NAME5', 'CHN', '1990-01-01', 'TEST', 0, 0);
  INSERT INTO T01_EMPLOYEE_TABLE
   VALUES('20002', 'NAME - 8', 'BGL', '1990-02-02', 'TEST',
   NULL, NULL);
  INSERT INTO T01_EMPLOYEE_TABLE
   VALUES('30003', 'AMOGH VAIDYA', 'PUN', '1990-03-03', 'M/F',
   60000.00, 6000.00);
  INSERT INTO T01_EMPLOYEE_TABLE
   VALUES('40004', 'AMITABH BACHCHAN', 'MUM', '1990-04-04', NULL,
   40000.00, 4000.00);
=====================================================================
Write a DB2 COBOL Program to print the Employee Details for all IDs
entered by the User in a Report. The Report format is given below where the Location Name has to be printed instead of the Code.
Program has to handle all the different SQLCODEs generated by DB2
without giving an unknown Error.

ID     EMP NAME		LOC NAME       EARNINGS DEDUCTIONS  TOTAL SAL
99999  XXXXXXXXXXXXXXX  XXXXXXXXXXXX  ZZ,ZZ9.99  ZZ,ZZ9.99  ZZ,ZZ9.99
99999  XXXXXXXXXXXXXXX  XXXXXXXXXXXX  ZZ,ZZ9.99  ZZ,ZZ9.99  ZZ,ZZ9.99
99999  XXXXXXXXXXXXXXX  XXXXXXXXXXXX  ZZ,ZZ9.99  ZZ,ZZ9.99  ZZ,ZZ9.99

TOTALS - INPUT = Z9, VALID - Z9	     ZZZ,ZZ9.99 ZZZ,ZZ9.99 ZZZ,ZZ9.99
======================================================================
While creating a Table, you can set some Constraints on Columns so that
these will contain Values for a specific values only.

  DROP   TABLE T01_ACCOUNT_TABLE;                         
  COMMIT;                                                 
--                                                        
  CREATE TABLE T01_ACCOUNT_TABLE                          
   (ACC_ID        DECIMAL(7) NOT NULL PRIMARY KEY,        
    ACC_NAME      VARCHAR(15),                            
    ACC_TYPE      CHAR(7),                                
        CHECK (ACC_LOC IN ('SAVINGS', 'CURRENT')),        
    ACC_OP_DATE   DATE WITH DEFAULT,                      
    ACC_BALANCE   DECIMAL(8,2)                            
        CHECK (ACC_BALANCE > 5000))                       
    IN PATNIDB1.PATNITS1;                                 
  CREATE UNIQUE INDEX ACCIDX ON T01_ACCOUNT_TABLE(ACC_ID);







Create the following 2 Tables & Insert the Rows given below -
  DROP   TABLE T01_LOCATION_TABLE;                                         COMMIT;                                                
  CREATE TABLE T01_LOCATION_TABLE                        
   (LOC_ID        CHAR(3) NOT NULL PRIMARY KEY,
    LOC_NAME      VARCHAR(12))
    IN PATNIDB1.PATNITS1;                                
  CREATE UNIQUE INDEX LOCIDX ON T01_LOCATION_TABLE(LOC_ID);
--
  DROP   TABLE T01_EMPLOYEE_TABLE;
  COMMIT;
  CREATE TABLE T01_EMPLOYEE_TABLE                                            (EMP_ID        CHAR(5) NOT NULL PRIMARY KEY,             
    EMP_NAME      VARCHAR(15),                                 
    EMP_LOC       CHAR(3),                                  
    EMP_DOB       DATE,                                     
    EMP_TECH      CHAR(5),                                  
    EMP_EARN      DECIMAL(7,2),                             
    EMP_DEDN      DECIMAL(7,2),                             
    FOREIGN KEY(EMP_LOC) REFERENCES T01_LOCATION_TABLE(LOC_ID))
    IN PATNIDB1.PATNITS1;
  CREATE UNIQUE INDEX EMPIDX ON T01_EMPLOYEE_TABLE(EMP_ID);
===========================================================
  INSERT INTO T01_LOCATION_TABLE                                
   VALUES('CHN', 'CHENNAI');                                    
  INSERT INTO T01_LOCATION_TABLE                                
   VALUES('PUN', 'PUNE');                                       
  INSERT INTO T01_LOCATION_TABLE                                
   VALUES('MUM', 'MUMBAI');                                       
  INSERT INTO T01_LOCATION_TABLE                                
   VALUES('BGL', 'BENGALURU');                                       
--
  INSERT INTO T01_EMPLOYEE_TABLE                                
   VALUES('10001', 'NAME5', 'CHN', '1990-01-01', 'TEST'
   0, 0);                                                       
  INSERT INTO T01_EMPLOYEE_TABLE                                
   VALUES('20002', 'NAME - 8', 'BGL', '1990-02-02', 'TEST'
   NULL, NULL);                                          
  INSERT INTO T01_EMPLOYEE_TABLE                                
   VALUES('30003', 'AMOGH VAIDYA', 'PUN', '1990-03-03', 'M/F',
   60000.00, 6000.00);
  INSERT INTO T01_EMPLOYEE_TABLE                                
   VALUES('40004', 'AMITABH BACHCHAN', 'MUM', '1990-04-04', NULL,
   40000.00, 4000.00);                                          
=====================================================================
Write a DB2 COBOL Program to print the Employee Details for all IDs
entered by the User in a Report. The Report format is given below where the Location Name has to be printed instead of the Code.
Program has to handle all the different SQLCODEs generated by DB2
without giving an unknown Error.

ID     EMP NAME		LOC NAME       EARNINGS DEDUCTIONS  TOTAL SAL
99999  XXXXXXXXXXXXXXX  XXXXXXXXXXXX  ZZ,ZZ9.99  ZZ,ZZ9.99  ZZ,ZZ9.99
99999  XXXXXXXXXXXXXXX  XXXXXXXXXXXX  ZZ,ZZ9.99  ZZ,ZZ9.99  ZZ,ZZ9.99
99999  XXXXXXXXXXXXXXX  XXXXXXXXXXXX  ZZ,ZZ9.99  ZZ,ZZ9.99  ZZ,ZZ9.99







